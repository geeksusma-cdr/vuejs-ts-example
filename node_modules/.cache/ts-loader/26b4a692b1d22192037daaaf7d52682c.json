{"remainingRequest":"/Users/geeksusma/vuejs-ts-example/node_modules/ts-loader/index.js??ref--12-1!/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue","mtime":1626092007813},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js","mtime":1625758098049},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/ts-loader/index.js","mtime":1625758098083},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js","mtime":1625758098049},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js","mtime":1625758104484}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgdXNlUm91dGUsIHVzZVJvdXRlciB9IGZyb20gJ3Z1ZS1yb3V0ZXInOwppbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJy4uL3N0b3JlJzsKaW1wb3J0IFBvc3RXcml0ZXIgZnJvbSAnLi9Qb3N0V3JpdGVyLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgUG9zdFdyaXRlcgogICAgfSwKICAgIGFzeW5jIHNldHVwKHByb3BzKSB7CiAgICAgICAgY29uc3Qgc3RvcmUgPSB1c2VTdG9yZSgpOwogICAgICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpOwogICAgICAgIGNvbnN0IGlkID0gdXNlUm91dGUoKS5wYXJhbXMuaWQ7CiAgICAgICAgaWYgKCFzdG9yZS5nZXRTdGF0ZSgpLnBvc3RzLmxvYWRlZCkgewogICAgICAgICAgICBhd2FpdCBzdG9yZS5mZXRjaFBvc3RzKCk7CiAgICAgICAgfQogICAgICAgIGNvbnN0IHBvc3QgPSBzdG9yZS5nZXRTdGF0ZSgpLnBvc3RzLmFsbC5nZXQoaWQpOwogICAgICAgIGlmICghcG9zdCkgewogICAgICAgICAgICB0aHJvdyBFcnJvcignUG9zdCB3YXMgbm90IGZvdW5kLicpOwogICAgICAgIH0KICAgICAgICBpZiAocG9zdC5hdXRob3JJZCAhPT0gc3RvcmUuZ2V0U3RhdGUoKS5hdXRob3JzLmN1cnJlbnRVc2VySWQpIHsKICAgICAgICAgICAgcm91dGVyLnB1c2goJy8nKTsKICAgICAgICB9CiAgICAgICAgY29uc3Qgc2F2ZSA9IGFzeW5jIChwb3N0KSA9PiB7CiAgICAgICAgICAgIGF3YWl0IHN0b3JlLnVwZGF0ZVBvc3QocG9zdCk7CiAgICAgICAgICAgIHJvdXRlci5wdXNoKCcvJyk7CiAgICAgICAgfTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwb3N0LAogICAgICAgICAgICBzYXZlCiAgICAgICAgfTsKICAgIH0KfSk7Cg=="},{"version":3,"file":"/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue.ts","sourceRoot":"","sources":["/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue?vue&type=script&lang=ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,KAAK,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,YAAY,CAAA;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAA;AAEnC,OAAO,UAAU,MAAM,kBAAkB,CAAA;AAEzC,eAAe,eAAe,CAAC;IAC7B,UAAU,EAAE;QACV,UAAU;KACX;IAED,KAAK,CAAC,KAAK,CAAC,KAAK;QACf,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAA;QACxB,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;QAC1B,MAAM,EAAE,GAAG,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAY,CAAA;QAEzC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;YAClC,MAAM,KAAK,CAAC,UAAU,EAAE,CAAA;SACzB;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;QAE/C,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,KAAK,CAAC,qBAAqB,CAAC,CAAA;SACnC;QAED,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE;YAC5D,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACjB;QAED,MAAM,IAAI,GAAG,KAAK,EAAE,IAAU,EAAE,EAAE;YAChC,MAAM,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;YAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QAClB,CAAC,CAAA;QAED,OAAO;YACL,IAAI;YACJ,IAAI;SACL,CAAA;IACH,CAAC;CACF,CAAC,CAAC","sourcesContent":["\nimport { defineComponent } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from '../store'\nimport { Post } from '../mocks';\nimport PostWriter from './PostWriter.vue'\n\nexport default defineComponent({\n  components: {\n    PostWriter\n  },\n\n  async setup(props) {\n    const store = useStore()\n    const router = useRouter()\n    const id = useRoute().params.id as string\n\n    if (!store.getState().posts.loaded) {\n      await store.fetchPosts()\n    }\n\n    const post = store.getState().posts.all.get(id)\n\n    if (!post) {\n      throw Error('Post was not found.')\n    }\n\n    if (post.authorId !== store.getState().authors.currentUserId) {\n      router.push('/')\n    }\n\n    const save = async (post: Post) => {\n      await store.updatePost(post)\n      router.push('/')\n    }\n\n    return {\n      post,\n      save\n    }\n  }\n});\n"]}]}