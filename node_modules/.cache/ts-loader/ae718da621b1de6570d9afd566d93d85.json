{"remainingRequest":"/Users/geeksusma/vuejs-ts-example/node_modules/ts-loader/index.js??ref--12-1!/Users/geeksusma/vuejs-ts-example/src/store.ts","dependencies":[{"path":"/Users/geeksusma/vuejs-ts-example/src/store.ts","mtime":1625841971063},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js","mtime":1625758098049},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/ts-loader/index.js","mtime":1625758098083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgX19hd2FpdGVyLCBfX2dlbmVyYXRvciB9IGZyb20gInRzbGliIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgcmVhY3RpdmUsIHJlYWRvbmx5IH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgdGhpc01vbnRoLCB0aGlzV2VlaywgdG9kYXkgfSBmcm9tICcuL21vY2tzJzsKdmFyIFN0b3JlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkgewogICAgZnVuY3Rpb24gU3RvcmUoaW5pdGlhbCkgewogICAgICAgIHRoaXMuc3RhdGUgPSByZWFjdGl2ZShpbml0aWFsKTsKICAgIH0KICAgIFN0b3JlLnByb3RvdHlwZS5nZXRTdGF0ZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gcmVhZG9ubHkodGhpcy5zdGF0ZSk7CiAgICB9OwogICAgU3RvcmUucHJvdG90eXBlLmZldGNoUG9zdHMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgcmVzcG9uc2UsIHBvc3RzU3RhdGUsIF9pLCBfYSwgcG9zdDsKICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYikgewogICAgICAgICAgICAgICAgc3dpdGNoIChfYi5sYWJlbCkgewogICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgYXhpb3MuZ2V0KCcvcG9zdHMnKV07CiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9iLnNlbnQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgcG9zdHNTdGF0ZSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkczogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGw6IG5ldyBNYXAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkZWQ6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChfaSA9IDAsIF9hID0gcmVzcG9uc2UuZGF0YTsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc3QgPSBfYVtfaV07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3N0c1N0YXRlLmlkcy5wdXNoKHBvc3QuaWQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zdHNTdGF0ZS5hbGwuc2V0KHBvc3QuaWQsIHBvc3QpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUucG9zdHMgPSBwb3N0c1N0YXRlOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qL107CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgfTsKICAgIFN0b3JlLnByb3RvdHlwZS5jcmVhdGVQb3N0ID0gZnVuY3Rpb24gKHBvc3QpIHsKICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkgewogICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgYXhpb3MucG9zdCgnL3Bvc3RzJywgcG9zdCldOwogICAgICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfYS5zZW50KCk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUucG9zdHMuYWxsLnNldChyZXNwb25zZS5kYXRhLmlkLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5wb3N0cy5pZHMucHVzaChyZXNwb25zZS5kYXRhLmlkKTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH07CiAgICByZXR1cm4gU3RvcmU7Cn0oKSk7CnZhciBhbGwgPSBuZXcgTWFwKCk7CmFsbC5zZXQodG9kYXkuaWQsIHRvZGF5KTsKYWxsLnNldCh0aGlzV2Vlay5pZCwgdGhpc1dlZWspOwphbGwuc2V0KHRoaXNNb250aC5pZCwgdGhpc01vbnRoKTsKdmFyIHN0b3JlID0gbmV3IFN0b3JlKHsKICAgIHBvc3RzOiB7CiAgICAgICAgYWxsOiBhbGwsCiAgICAgICAgaWRzOiBbdG9kYXkuaWQsIHRoaXNXZWVrLmlkLCB0aGlzTW9udGguaWRdLAogICAgICAgIGxvYWRlZDogZmFsc2UsCiAgICB9Cn0pOwpleHBvcnQgZnVuY3Rpb24gdXNlU3RvcmUoKSB7CiAgICByZXR1cm4gc3RvcmU7Cn0K"},{"version":3,"file":"/Users/geeksusma/vuejs-ts-example/src/store.ts","sourceRoot":"","sources":["/Users/geeksusma/vuejs-ts-example/src/store.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAQ,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAa3D;IAGI,eAAY,OAAc;QACtB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAA;IAClC,CAAC;IAED,wBAAQ,GAAR;QACI,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAGK,0BAAU,GAAhB;;;;;4BACqB,qBAAM,KAAK,CAAC,GAAG,CAAS,QAAQ,CAAC,EAAA;;wBAA5C,QAAQ,GAAG,SAAiC;wBAC5C,UAAU,GAAc;4BAC1B,GAAG,EAAE,EAAE;4BACP,GAAG,EAAE,IAAI,GAAG;4BACZ,MAAM,EAAE,IAAI;yBACf,CAAA;wBACD,WAAgC,EAAb,KAAA,QAAQ,CAAC,IAAI,EAAb,cAAa,EAAb,IAAa,EAAE;4BAAvB,IAAI;4BACX,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAC7B,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;yBACrC;wBACD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;;;;;KACjC;IAEK,0BAAU,GAAhB,UAAiB,IAAU;;;;;4BACN,qBAAM,KAAK,CAAC,IAAI,CAAO,QAAQ,EAAE,IAAI,CAAC,EAAA;;wBAAjD,QAAQ,GAAG,SAAsC;wBACvD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAA;wBACzD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;;;;;KAC9C;IACL,YAAC;AAAD,CAAC,AA/BD,IA+BC;AAED,IAAM,GAAG,GAAG,IAAI,GAAG,EAAgB,CAAC;AACpC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACzB,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC/B,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;AAEjC,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC;IACpB,KAAK,EAAE;QACH,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC;QAC1C,MAAM,EAAE,KAAK;KAChB;CACJ,CAAC,CAAA;AAEF,MAAM,UAAU,QAAQ;IACpB,OAAO,KAAK,CAAC;AACjB,CAAC","sourcesContent":["import axios from 'axios';\nimport { reactive, readonly } from 'vue';\nimport { Post, thisMonth, thisWeek, today } from './mocks';\n\ninterface State {\n    posts: PostState\n}\n\ninterface PostState {\n    ids: string[];\n    all: Map<string, Post>\n\n    loaded: boolean\n}\n\nclass Store {\n    state: State\n\n    constructor(initial: State) {\n        this.state = reactive(initial)\n    }\n\n    getState() {\n        return readonly(this.state);\n    }\n\n\n    async fetchPosts() {\n        const response = await axios.get<Post[]>('/posts')\n        const postsState: PostState = {\n            ids: [],\n            all: new Map,\n            loaded: true\n        }\n        for (const post of response.data) {\n            postsState.ids.push(post.id);\n            postsState.all.set(post.id, post);\n        }\n        this.state.posts = postsState;\n    }\n\n    async createPost(post: Post) {\n        const response = await axios.post<Post>('/posts', post)\n        this.state.posts.all.set(response.data.id, response.data)\n        this.state.posts.ids.push(response.data.id)\n    }\n}\n\nconst all = new Map<string, Post>();\nall.set(today.id, today);\nall.set(thisWeek.id, thisWeek);\nall.set(thisMonth.id, thisMonth);\n\nconst store = new Store({\n    posts: {\n        all: all,\n        ids: [today.id, thisWeek.id, thisMonth.id],\n        loaded: false,\n    }\n})\n\nexport function useStore() {\n    return store;\n}"]}]}