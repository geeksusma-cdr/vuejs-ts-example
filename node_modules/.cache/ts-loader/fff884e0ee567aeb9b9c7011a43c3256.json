{"remainingRequest":"/Users/geeksusma/vuejs-ts-example/node_modules/ts-loader/index.js??ref--12-1!/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue","mtime":1626085540882},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgdXNlUm91dGUsIHVzZVJvdXRlciB9IGZyb20gJ3Z1ZS1yb3V0ZXInOwppbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJy4uL3N0b3JlJzsKaW1wb3J0IFBvc3RXcml0ZXIgZnJvbSAnLi9Qb3N0V3JpdGVyLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgUG9zdFdyaXRlcgogICAgfSwKICAgIGFzeW5jIHNldHVwKHByb3BzKSB7CiAgICAgICAgY29uc3Qgc3RvcmUgPSB1c2VTdG9yZSgpOwogICAgICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpOwogICAgICAgIGNvbnN0IGlkID0gdXNlUm91dGUoKS5wYXJhbXMuaWQ7CiAgICAgICAgaWYgKCFzdG9yZS5nZXRTdGF0ZSgpLnBvc3RzLmxvYWRlZCkgewogICAgICAgICAgICBhd2FpdCBzdG9yZS5mZXRjaFBvc3RzKCk7CiAgICAgICAgfQogICAgICAgIGNvbnN0IHBvc3QgPSBzdG9yZS5nZXRTdGF0ZSgpLnBvc3RzLmFsbC5nZXQoaWQpOwogICAgICAgIGlmICghcG9zdCkgewogICAgICAgICAgICB0aHJvdyBFcnJvcignUG9zdCB3YXMgbm90IGZvdW5kLicpOwogICAgICAgIH0KICAgICAgICBpZiAocG9zdC5hdXRob3JJZCAhPT0gc3RvcmUuZ2V0U3RhdGUoKS5hdXRob3JzLmN1cnJlbnRVc2VySWQpIHsKICAgICAgICAgICAgcm91dGVyLnB1c2goJy8nKTsKICAgICAgICB9CiAgICAgICAgY29uc3Qgc2F2ZSA9IGFzeW5jIChwb3N0KSA9PiB7CiAgICAgICAgICAgIGF3YWl0IHN0b3JlLnVwZGF0ZVBvc3QocG9zdCk7CiAgICAgICAgICAgIHJvdXRlci5wdXNoKCcvJyk7CiAgICAgICAgfTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwb3N0LAogICAgICAgICAgICBzYXZlCiAgICAgICAgfTsKICAgIH0KfSk7Cg=="},{"version":3,"file":"/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue.ts","sourceRoot":"","sources":["/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue?vue&type=script&lang=ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,KAAK,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,YAAY,CAAA;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAA;AAEnC,OAAO,UAAU,MAAM,kBAAkB,CAAA;AACzC,eAAe,eAAe,CAAC;IAC3B,UAAU,EAAE;QACR,UAAU;KACb;IACD,KAAK,CAAC,KAAK,CAAC,KAAK;QACb,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAA;QACxB,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;QAC1B,MAAM,EAAE,GAAG,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAY,CAAA;QACzC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;YAChC,MAAM,KAAK,CAAC,UAAU,EAAE,CAAA;SAC3B;QACD,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;QAC/C,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,KAAK,CAAC,qBAAqB,CAAC,CAAA;SACrC;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE;YAC1D,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACnB;QACD,MAAM,IAAI,GAAG,KAAK,EAAE,IAAU,EAAE,EAAE;YAC9B,MAAM,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;YAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACpB,CAAC,CAAA;QACD,OAAO;YACH,IAAI;YACJ,IAAI;SACP,CAAA;IACL,CAAC;CACJ,CAAC,CAAC","sourcesContent":["\nimport { defineComponent } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from '../store'\nimport { Post } from '../mocks';\nimport PostWriter from './PostWriter.vue'\nexport default defineComponent({\n    components: {\n        PostWriter\n    },\n    async setup(props) {\n        const store = useStore()\n        const router = useRouter()\n        const id = useRoute().params.id as string\n        if (!store.getState().posts.loaded) {\n            await store.fetchPosts()\n        }\n        const post = store.getState().posts.all.get(id)\n        if (!post) {\n            throw Error('Post was not found.')\n        }\n        if (post.authorId !== store.getState().authors.currentUserId) {\n            router.push('/')\n        }\n        const save = async (post: Post) => {\n            await store.updatePost(post)\n            router.push('/')\n        }\n        return {\n            post,\n            save\n        }\n    }\n});\n"]}]}