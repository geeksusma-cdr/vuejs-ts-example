{"remainingRequest":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue","mtime":1626085540882},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IHVzZVJvdXRlLCB1c2VSb3V0ZXIgfSBmcm9tICd2dWUtcm91dGVyJwppbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJy4uL3N0b3JlJwppbXBvcnQgeyBQb3N0IH0gZnJvbSAnLi4vbW9ja3MnOwppbXBvcnQgUG9zdFdyaXRlciBmcm9tICcuL1Bvc3RXcml0ZXIudnVlJwpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogICAgY29tcG9uZW50czogewogICAgICAgIFBvc3RXcml0ZXIKICAgIH0sCiAgICBhc3luYyBzZXR1cChwcm9wcykgewogICAgICAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoKQogICAgICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpCiAgICAgICAgY29uc3QgaWQgPSB1c2VSb3V0ZSgpLnBhcmFtcy5pZCBhcyBzdHJpbmcKICAgICAgICBpZiAoIXN0b3JlLmdldFN0YXRlKCkucG9zdHMubG9hZGVkKSB7CiAgICAgICAgICAgIGF3YWl0IHN0b3JlLmZldGNoUG9zdHMoKQogICAgICAgIH0KICAgICAgICBjb25zdCBwb3N0ID0gc3RvcmUuZ2V0U3RhdGUoKS5wb3N0cy5hbGwuZ2V0KGlkKQogICAgICAgIGlmICghcG9zdCkgewogICAgICAgICAgICB0aHJvdyBFcnJvcignUG9zdCB3YXMgbm90IGZvdW5kLicpCiAgICAgICAgfQogICAgICAgIGlmIChwb3N0LmF1dGhvcklkICE9PSBzdG9yZS5nZXRTdGF0ZSgpLmF1dGhvcnMuY3VycmVudFVzZXJJZCkgewogICAgICAgICAgICByb3V0ZXIucHVzaCgnLycpCiAgICAgICAgfQogICAgICAgIGNvbnN0IHNhdmUgPSBhc3luYyAocG9zdDogUG9zdCkgPT4gewogICAgICAgICAgICBhd2FpdCBzdG9yZS51cGRhdGVQb3N0KHBvc3QpCiAgICAgICAgICAgIHJvdXRlci5wdXNoKCcvJykKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgcG9zdCwKICAgICAgICAgICAgc2F2ZQogICAgICAgIH0KICAgIH0KfSk7Cg=="},{"version":3,"sources":["/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue"],"names":[],"mappings":"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","file":"/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue","sourceRoot":"","sourcesContent":["<template>\n    <post-writer :post=\"post\" @save=\"save\" />\n</template>\n  \n  <script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from '../store'\nimport { Post } from '../mocks';\nimport PostWriter from './PostWriter.vue'\nexport default defineComponent({\n    components: {\n        PostWriter\n    },\n    async setup(props) {\n        const store = useStore()\n        const router = useRouter()\n        const id = useRoute().params.id as string\n        if (!store.getState().posts.loaded) {\n            await store.fetchPosts()\n        }\n        const post = store.getState().posts.all.get(id)\n        if (!post) {\n            throw Error('Post was not found.')\n        }\n        if (post.authorId !== store.getState().authors.currentUserId) {\n            router.push('/')\n        }\n        const save = async (post: Post) => {\n            await store.updatePost(post)\n            router.push('/')\n        }\n        return {\n            post,\n            save\n        }\n    }\n});\n</script>"]}]}