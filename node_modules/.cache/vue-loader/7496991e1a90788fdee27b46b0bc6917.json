{"remainingRequest":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/geeksusma/vuejs-ts-example/src/components/Timeline.vue?vue&type=template&id=7f3aebf1&scoped=true","dependencies":[{"path":"/Users/geeksusma/vuejs-ts-example/src/components/Timeline.vue","mtime":1625827117193},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1625817642607},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js","mtime":1625758098049},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js","mtime":1625817642607}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPG5hdiBjbGFzcz0iaXMtcHJpbWFyeSBwYW5lbCI+CiAgICA8c3BhbiBjbGFzcz0icGFuZWwtdGFicyI+CiAgICAgIDxhCiAgICAgICAgdi1mb3I9InBlcmlvZCBpbiBwZXJpb2RzIgogICAgICAgIDprZXk9InBlcmlvZCIKICAgICAgICB2LWJpbmQ6Y2xhc3M9InsgJ2lzLWFjdGl2ZSc6IHBlcmlvZCA9PT0gc2VsZWN0ZWRQZXJpb2QgfSIKICAgICAgICBAY2xpY2s9InNlbGVjdFBlcmlvZChwZXJpb2QpIgogICAgICA+CiAgICAgICAge3sgcGVyaW9kIH19CiAgICAgIDwvYT4KICAgIDwvc3Bhbj4KICAgIDx0aW1lbGluZS1wb3N0CiAgICAgIHYtZm9yPSJwb3N0IGluIHBvc3RzIgogICAgICA6a2V5PSJwb3N0LmlkIgogICAgICA6cG9zdD0icG9zdCIKICAgICAgY2xhc3M9InBhbmVsLWJsb2NrIgogICAgLz4KICA8L25hdj4K"},{"version":3,"sources":["/Users/geeksusma/vuejs-ts-example/src/components/Timeline.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC;QACC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9B;QACE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MACb,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/geeksusma/vuejs-ts-example/src/components/Timeline.vue","sourceRoot":"","sourcesContent":["<template>\n  <nav class=\"is-primary panel\">\n    <span class=\"panel-tabs\">\n      <a\n        v-for=\"period in periods\"\n        :key=\"period\"\n        v-bind:class=\"{ 'is-active': period === selectedPeriod }\"\n        @click=\"selectPeriod(period)\"\n      >\n        {{ period }}\n      </a>\n    </span>\n    <timeline-post\n      v-for=\"post in posts\"\n      :key=\"post.id\"\n      :post=\"post\"\n      class=\"panel-block\"\n    />\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from \"vue\";\nimport { Post } from \"../mocks\";\nimport { useStore } from \"../store\";\nimport moment from \"moment\";\nimport TimelinePost from \"./TimelinePost.vue\";\n\ntype Period = \"Today\" | \"This Week\" | \"This Month\";\n\nfunction delay() {\n  return new Promise((res) => {\n    setTimeout(res, 2000);\n  });\n}\n\nexport default defineComponent({\n  name: \"Timeline\",\n\n  components: {\n    TimelinePost,\n  },\n\n  async setup() {\n    await delay();\n    const periods = [\"Today\", \"This Week\", \"This Month\"];\n    const selectedPeriod = ref<Period>(\"Today\");\n    const store = useStore();\n    const allPosts: Post[] = store\n      .getState()\n      .posts.ids.reduce<Post[]>((acc, id) => {\n        const thePost = store.getState().posts.all.get(id);\n        if (!thePost) {\n          throw Error(\"This post was not found\");\n        }\n        return acc.concat(thePost);\n      }, []);\n    const posts = computed(() => {\n      return allPosts.filter((post) => {\n        if (selectedPeriod.value === \"Today\") {\n          return post.created.isAfter(moment().subtract(1, \"day\"));\n        }\n        if (selectedPeriod.value === \"This Week\") {\n          return post.created.isAfter(moment().subtract(1, \"week\"));\n        }\n        if (selectedPeriod.value === \"This Month\") {\n          return post.created.isAfter(moment().subtract(1, \"month\"));\n        }\n        return false;\n      });\n    });\n\n    const selectPeriod = (period: Period) => {\n      selectedPeriod.value = period;\n    };\n\n    return {\n      periods,\n      selectedPeriod,\n      selectPeriod,\n      posts,\n    };\n  },\n});\n</script>\n\n<style scoped>\n</style>\n\n"]}]}