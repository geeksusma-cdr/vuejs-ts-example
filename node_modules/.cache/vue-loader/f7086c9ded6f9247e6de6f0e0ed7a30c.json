{"remainingRequest":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue?vue&type=template&id=4ac570b0","dependencies":[{"path":"/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue","mtime":1626085540882},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1624994109000},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/geeksusma/vuejs-ts-example/node_modules/vue-loader-v16/dist/index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:PHBvc3Qtd3JpdGVyIDpwb3N0PSJwb3N0IiBAc2F2ZT0ic2F2ZSIgLz4="},{"version":3,"sources":["/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue"],"names":[],"mappings":"AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC","file":"/Users/geeksusma/vuejs-ts-example/src/components/PostEditor.vue","sourceRoot":"","sourcesContent":["<template>\n    <post-writer :post=\"post\" @save=\"save\" />\n</template>\n  \n  <script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from '../store'\nimport { Post } from '../mocks';\nimport PostWriter from './PostWriter.vue'\nexport default defineComponent({\n    components: {\n        PostWriter\n    },\n    async setup(props) {\n        const store = useStore()\n        const router = useRouter()\n        const id = useRoute().params.id as string\n        if (!store.getState().posts.loaded) {\n            await store.fetchPosts()\n        }\n        const post = store.getState().posts.all.get(id)\n        if (!post) {\n            throw Error('Post was not found.')\n        }\n        if (post.authorId !== store.getState().authors.currentUserId) {\n            router.push('/')\n        }\n        const save = async (post: Post) => {\n            await store.updatePost(post)\n            router.push('/')\n        }\n        return {\n            post,\n            save\n        }\n    }\n});\n</script>"]}]}